syntax = "proto3";

package geniustechspace.accounts.auth.v1;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "common/types.proto";

option go_package = "github.com/geniustechspace/api-contracts/gen/go/auth/v1";
option java_multiple_files = true;
option java_package = "com.geniustechspace.api.auth.v1";

// Session represents an authenticated user session
message Session {
  // Unique session identifier
  string session_id = 1;

  // User ID associated with this session
  string user_id = 2;

  // Device identifier
  string device_id = 3;

  // Device name/description
  string device_name = 4;

  // IP address when session was created
  string ip_address = 5;

  // User agent string
  string user_agent = 6;

  // Session creation timestamp
  google.protobuf.Timestamp created_at = 7;

  // Last activity timestamp
  google.protobuf.Timestamp last_active_at = 8;

  // Session expiration timestamp
  google.protobuf.Timestamp expires_at = 9;

  // Whether this is the current session
  bool is_current = 10;

  // Geographic location (city, country)
  string location = 11;
}

// GetSessionsRequest requests all active sessions for a user
message GetSessionsRequest {
  // User ID (extracted from auth token)
  // No explicit field needed - derived from authentication context
}

// GetSessionsResponse contains all active sessions
message GetSessionsResponse {
  // List of active sessions
  repeated Session sessions = 1;

  // Total session count
  int32 total = 2;
}

// RevokeSessionRequest revokes a specific session
message RevokeSessionRequest {
  // Session ID to revoke
  string session_id = 1;
}

// RevokeSessionResponse confirms session revocation
message RevokeSessionResponse {
  // Success status
  bool success = 1;

  // Human-readable message
  string message = 2;
}

// ChangePasswordRequest changes user password
message ChangePasswordRequest {
  // Current password for verification
  string current_password = 1;

  // New password
  string new_password = 2;

  // Whether to logout all other sessions
  bool logout_all_sessions = 3;
}

// ChangePasswordResponse confirms password change
message ChangePasswordResponse {
  // Success status
  bool success = 1;

  // Human-readable message
  string message = 2;

  // New tokens if current session was renewed
  string access_token = 3;
  string refresh_token = 4;
}

// RequestPasswordResetRequest initiates password reset flow
message RequestPasswordResetRequest {
  // Email address of the account
  string email = 1;
}

// RequestPasswordResetResponse confirms reset email sent
message RequestPasswordResetResponse {
  // Success status
  bool success = 1;

  // Human-readable message
  string message = 2;
}

// ResetPasswordRequest resets password with token
message ResetPasswordRequest {
  // Reset token from email
  string reset_token = 1;

  // New password
  string new_password = 2;
}

// ResetPasswordResponse confirms password reset
message ResetPasswordResponse {
  // Success status
  bool success = 1;

  // Human-readable message
  string message = 2;
}
