syntax = "proto3";

package geniustechspace.organizations.v1;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "common/types.proto";

option go_package = "github.com/geniustechspace/api-contracts/gen/go/organizations/v1";
option java_multiple_files = true;
option java_package = "com.geniustechspace.api.organizations.v1";

// OrganizationService manages organizations and team structures
service OrganizationService {
  // Create a new organization
  rpc CreateOrganization(CreateOrganizationRequest) returns (CreateOrganizationResponse) {
    option (google.api.http) = {
      post: "/v1/organizations"
      body: "*"
    };
  }

  // Get organization by ID
  rpc GetOrganization(GetOrganizationRequest) returns (GetOrganizationResponse) {
    option (google.api.http) = {
      get: "/v1/organizations/{organization_id}"
    };
  }

  // Update organization
  rpc UpdateOrganization(UpdateOrganizationRequest) returns (UpdateOrganizationResponse) {
    option (google.api.http) = {
      patch: "/v1/organizations/{organization_id}"
      body: "*"
    };
  }

  // Delete organization
  rpc DeleteOrganization(DeleteOrganizationRequest) returns (DeleteOrganizationResponse) {
    option (google.api.http) = {
      delete: "/v1/organizations/{organization_id}"
    };
  }

  // List organizations for current user
  rpc ListOrganizations(ListOrganizationsRequest) returns (ListOrganizationsResponse) {
    option (google.api.http) = {
      get: "/v1/organizations"
    };
  }

  // Add member to organization
  rpc AddMember(AddMemberRequest) returns (AddMemberResponse) {
    option (google.api.http) = {
      post: "/v1/organizations/{organization_id}/members"
      body: "*"
    };
  }

  // Remove member from organization
  rpc RemoveMember(RemoveMemberRequest) returns (RemoveMemberResponse) {
    option (google.api.http) = {
      delete: "/v1/organizations/{organization_id}/members/{user_id}"
    };
  }

  // Update member role
  rpc UpdateMemberRole(UpdateMemberRoleRequest) returns (UpdateMemberRoleResponse) {
    option (google.api.http) = {
      patch: "/v1/organizations/{organization_id}/members/{user_id}"
      body: "*"
    };
  }

  // List organization members
  rpc ListMembers(ListMembersRequest) returns (ListMembersResponse) {
    option (google.api.http) = {
      get: "/v1/organizations/{organization_id}/members"
    };
  }

  // Invite user to organization
  rpc InviteMember(InviteMemberRequest) returns (InviteMemberResponse) {
    option (google.api.http) = {
      post: "/v1/organizations/{organization_id}/invites"
      body: "*"
    };
  }

  // Accept organization invitation
  rpc AcceptInvite(AcceptInviteRequest) returns (AcceptInviteResponse) {
    option (google.api.http) = {
      post: "/v1/organizations/invites/{invite_id}/accept"
      body: "*"
    };
  }
}

// OrganizationStatus represents organization status
enum OrganizationStatus {
  ORGANIZATION_STATUS_UNSPECIFIED = 0;
  ORGANIZATION_STATUS_ACTIVE = 1;
  ORGANIZATION_STATUS_INACTIVE = 2;
  ORGANIZATION_STATUS_SUSPENDED = 3;
  ORGANIZATION_STATUS_TRIAL = 4;
}

// MemberRole represents member role in organization
enum MemberRole {
  MEMBER_ROLE_UNSPECIFIED = 0;
  MEMBER_ROLE_OWNER = 1;
  MEMBER_ROLE_ADMIN = 2;
  MEMBER_ROLE_MEMBER = 3;
  MEMBER_ROLE_VIEWER = 4;
}

// InviteStatus represents invitation status
enum InviteStatus {
  INVITE_STATUS_UNSPECIFIED = 0;
  INVITE_STATUS_PENDING = 1;
  INVITE_STATUS_ACCEPTED = 2;
  INVITE_STATUS_DECLINED = 3;
  INVITE_STATUS_EXPIRED = 4;
  INVITE_STATUS_REVOKED = 5;
}

// Organization represents an organization entity
message Organization {
  // Unique organization identifier
  string organization_id = 1;

  // Organization name
  string name = 2;

  // Display name
  string display_name = 3;

  // Organization description
  string description = 4;

  // Organization logo URL
  string logo_url = 5;

  // Organization website
  string website = 6;

  // Organization email
  string email = 7;

  // Organization phone
  common.PhoneNumber phone = 8;

  // Organization address
  common.Address address = 9;

  // Organization status
  OrganizationStatus status = 10;

  // Number of members
  int32 member_count = 11;

  // Subscription plan
  string plan = 12;

  // Metadata
  common.Metadata metadata = 13;

  // Settings
  map<string, string> settings = 14;
}

// Member represents an organization member
message Member {
  // User ID
  string user_id = 1;

  // User email
  string email = 2;

  // User full name
  string full_name = 3;

  // User avatar URL
  string avatar_url = 4;

  // Member role
  MemberRole role = 5;

  // Joined timestamp
  google.protobuf.Timestamp joined_at = 6;

  // Member status
  string status = 7;
}

// Invitation represents an organization invitation
message Invitation {
  // Invitation ID
  string invite_id = 1;

  // Organization ID
  string organization_id = 2;

  // Organization name
  string organization_name = 3;

  // Invitee email
  string email = 4;

  // Inviter user ID
  string invited_by = 5;

  // Inviter name
  string invited_by_name = 6;

  // Role being offered
  MemberRole role = 7;

  // Invitation status
  InviteStatus status = 8;

  // Invitation message
  string message = 9;

  // Created timestamp
  google.protobuf.Timestamp created_at = 10;

  // Expiration timestamp
  google.protobuf.Timestamp expires_at = 11;
}

// CreateOrganizationRequest creates new organization
message CreateOrganizationRequest {
  // Organization name (unique)
  string name = 1;

  // Display name
  string display_name = 2;

  // Description
  string description = 3;

  // Website
  string website = 4;

  // Email
  string email = 5;

  // Phone
  common.PhoneNumber phone = 6;

  // Address
  common.Address address = 7;
}

// CreateOrganizationResponse returns created organization
message CreateOrganizationResponse {
  // Created organization
  Organization organization = 1;
}

// GetOrganizationRequest gets organization by ID
message GetOrganizationRequest {
  // Organization ID
  string organization_id = 1;
}

// GetOrganizationResponse returns organization
message GetOrganizationResponse {
  // Organization
  Organization organization = 1;
}

// UpdateOrganizationRequest updates organization
message UpdateOrganizationRequest {
  // Organization ID
  string organization_id = 1;

  // Display name
  optional string display_name = 2;

  // Description
  optional string description = 3;

  // Website
  optional string website = 4;

  // Email
  optional string email = 5;

  // Phone
  optional common.PhoneNumber phone = 6;

  // Address
  optional common.Address address = 7;

  // Settings
  map<string, string> settings = 8;
}

// UpdateOrganizationResponse returns updated organization
message UpdateOrganizationResponse {
  // Updated organization
  Organization organization = 1;
}

// DeleteOrganizationRequest deletes organization
message DeleteOrganizationRequest {
  // Organization ID
  string organization_id = 1;

  // Confirmation token
  string confirmation = 2;
}

// DeleteOrganizationResponse confirms deletion
message DeleteOrganizationResponse {
  // Success status
  bool success = 1;

  // Message
  string message = 2;
}

// ListOrganizationsRequest lists organizations
message ListOrganizationsRequest {
  // Pagination
  common.PaginationRequest pagination = 1;

  // Filter by status
  optional OrganizationStatus status = 2;
}

// ListOrganizationsResponse returns organizations
message ListOrganizationsResponse {
  // Organizations
  repeated Organization organizations = 1;

  // Pagination
  common.PaginationResponse pagination = 2;
}

// AddMemberRequest adds member to organization
message AddMemberRequest {
  // Organization ID
  string organization_id = 1;

  // User ID
  string user_id = 2;

  // Role
  MemberRole role = 3;
}

// AddMemberResponse confirms member added
message AddMemberResponse {
  // Member
  Member member = 1;
}

// RemoveMemberRequest removes member
message RemoveMemberRequest {
  // Organization ID
  string organization_id = 1;

  // User ID
  string user_id = 2;
}

// RemoveMemberResponse confirms removal
message RemoveMemberResponse {
  // Success status
  bool success = 1;

  // Message
  string message = 2;
}

// UpdateMemberRoleRequest updates member role
message UpdateMemberRoleRequest {
  // Organization ID
  string organization_id = 1;

  // User ID
  string user_id = 2;

  // New role
  MemberRole role = 3;
}

// UpdateMemberRoleResponse returns updated member
message UpdateMemberRoleResponse {
  // Updated member
  Member member = 1;
}

// ListMembersRequest lists members
message ListMembersRequest {
  // Organization ID
  string organization_id = 1;

  // Pagination
  common.PaginationRequest pagination = 2;

  // Filter by role
  optional MemberRole role = 3;
}

// ListMembersResponse returns members
message ListMembersResponse {
  // Members
  repeated Member members = 1;

  // Pagination
  common.PaginationResponse pagination = 2;
}

// InviteMemberRequest invites member
message InviteMemberRequest {
  // Organization ID
  string organization_id = 1;

  // Email
  string email = 2;

  // Role
  MemberRole role = 3;

  // Optional message
  string message = 4;
}

// InviteMemberResponse returns invitation
message InviteMemberResponse {
  // Invitation
  Invitation invitation = 1;
}

// AcceptInviteRequest accepts invitation
message AcceptInviteRequest {
  // Invitation ID
  string invite_id = 1;
}

// AcceptInviteResponse confirms acceptance
message AcceptInviteResponse {
  // Organization
  Organization organization = 1;

  // Member
  Member member = 2;
}
